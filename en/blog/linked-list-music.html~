<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">
<head>
<!-- 2024-04-29 Mon 06:54 -->
<meta http-equiv="Content-Type" content="text/html;charset=utf-8" />
<meta name="viewport" content="width=device-width, initial-scale=1" />
<title>Linked List Music</title>
<meta name="generator" content="Org mode" />
<meta name="author" content="Richard Davis" />
<style type="text/css">
 <!--/*--><![CDATA[/*><!--*/
  .title  { text-align: center;
             margin-bottom: .2em; }
  .subtitle { text-align: center;
              font-size: medium;
              font-weight: bold;
              margin-top:0; }
  .todo   { font-family: monospace; color: red; }
  .done   { font-family: monospace; color: green; }
  .priority { font-family: monospace; color: orange; }
  .tag    { background-color: #eee; font-family: monospace;
            padding: 2px; font-size: 80%; font-weight: normal; }
  .timestamp { color: #bebebe; }
  .timestamp-kwd { color: #5f9ea0; }
  .org-right  { margin-left: auto; margin-right: 0px;  text-align: right; }
  .org-left   { margin-left: 0px;  margin-right: auto; text-align: left; }
  .org-center { margin-left: auto; margin-right: auto; text-align: center; }
  .underline { text-decoration: underline; }
  #postamble p, #preamble p { font-size: 90%; margin: .2em; }
  p.verse { margin-left: 3%; }
  pre {
    border: 1px solid #ccc;
    box-shadow: 3px 3px 3px #eee;
    padding: 8pt;
    font-family: monospace;
    overflow: auto;
    margin: 1.2em;
  }
  pre.src {
    position: relative;
    overflow: visible;
    padding-top: 1.2em;
  }
  pre.src:before {
    display: none;
    position: absolute;
    background-color: white;
    top: -10px;
    right: 10px;
    padding: 3px;
    border: 1px solid black;
  }
  pre.src:hover:before { display: inline;}
  /* Languages per Org manual */
  pre.src-asymptote:before { content: 'Asymptote'; }
  pre.src-awk:before { content: 'Awk'; }
  pre.src-C:before { content: 'C'; }
  /* pre.src-C++ doesn't work in CSS */
  pre.src-clojure:before { content: 'Clojure'; }
  pre.src-css:before { content: 'CSS'; }
  pre.src-D:before { content: 'D'; }
  pre.src-ditaa:before { content: 'ditaa'; }
  pre.src-dot:before { content: 'Graphviz'; }
  pre.src-calc:before { content: 'Emacs Calc'; }
  pre.src-emacs-lisp:before { content: 'Emacs Lisp'; }
  pre.src-fortran:before { content: 'Fortran'; }
  pre.src-gnuplot:before { content: 'gnuplot'; }
  pre.src-haskell:before { content: 'Haskell'; }
  pre.src-hledger:before { content: 'hledger'; }
  pre.src-java:before { content: 'Java'; }
  pre.src-js:before { content: 'Javascript'; }
  pre.src-latex:before { content: 'LaTeX'; }
  pre.src-ledger:before { content: 'Ledger'; }
  pre.src-lisp:before { content: 'Lisp'; }
  pre.src-lilypond:before { content: 'Lilypond'; }
  pre.src-lua:before { content: 'Lua'; }
  pre.src-matlab:before { content: 'MATLAB'; }
  pre.src-mscgen:before { content: 'Mscgen'; }
  pre.src-ocaml:before { content: 'Objective Caml'; }
  pre.src-octave:before { content: 'Octave'; }
  pre.src-org:before { content: 'Org mode'; }
  pre.src-oz:before { content: 'OZ'; }
  pre.src-plantuml:before { content: 'Plantuml'; }
  pre.src-processing:before { content: 'Processing.js'; }
  pre.src-python:before { content: 'Python'; }
  pre.src-R:before { content: 'R'; }
  pre.src-ruby:before { content: 'Ruby'; }
  pre.src-sass:before { content: 'Sass'; }
  pre.src-scheme:before { content: 'Scheme'; }
  pre.src-screen:before { content: 'Gnu Screen'; }
  pre.src-sed:before { content: 'Sed'; }
  pre.src-sh:before { content: 'shell'; }
  pre.src-sql:before { content: 'SQL'; }
  pre.src-sqlite:before { content: 'SQLite'; }
  /* additional languages in org.el's org-babel-load-languages alist */
  pre.src-forth:before { content: 'Forth'; }
  pre.src-io:before { content: 'IO'; }
  pre.src-J:before { content: 'J'; }
  pre.src-makefile:before { content: 'Makefile'; }
  pre.src-maxima:before { content: 'Maxima'; }
  pre.src-perl:before { content: 'Perl'; }
  pre.src-picolisp:before { content: 'Pico Lisp'; }
  pre.src-scala:before { content: 'Scala'; }
  pre.src-shell:before { content: 'Shell Script'; }
  pre.src-ebnf2ps:before { content: 'ebfn2ps'; }
  /* additional language identifiers per "defun org-babel-execute"
       in ob-*.el */
  pre.src-cpp:before  { content: 'C++'; }
  pre.src-abc:before  { content: 'ABC'; }
  pre.src-coq:before  { content: 'Coq'; }
  pre.src-groovy:before  { content: 'Groovy'; }
  /* additional language identifiers from org-babel-shell-names in
     ob-shell.el: ob-shell is the only babel language using a lambda to put
     the execution function name together. */
  pre.src-bash:before  { content: 'bash'; }
  pre.src-csh:before  { content: 'csh'; }
  pre.src-ash:before  { content: 'ash'; }
  pre.src-dash:before  { content: 'dash'; }
  pre.src-ksh:before  { content: 'ksh'; }
  pre.src-mksh:before  { content: 'mksh'; }
  pre.src-posh:before  { content: 'posh'; }
  /* Additional Emacs modes also supported by the LaTeX listings package */
  pre.src-ada:before { content: 'Ada'; }
  pre.src-asm:before { content: 'Assembler'; }
  pre.src-caml:before { content: 'Caml'; }
  pre.src-delphi:before { content: 'Delphi'; }
  pre.src-html:before { content: 'HTML'; }
  pre.src-idl:before { content: 'IDL'; }
  pre.src-mercury:before { content: 'Mercury'; }
  pre.src-metapost:before { content: 'MetaPost'; }
  pre.src-modula-2:before { content: 'Modula-2'; }
  pre.src-pascal:before { content: 'Pascal'; }
  pre.src-ps:before { content: 'PostScript'; }
  pre.src-prolog:before { content: 'Prolog'; }
  pre.src-simula:before { content: 'Simula'; }
  pre.src-tcl:before { content: 'tcl'; }
  pre.src-tex:before { content: 'TeX'; }
  pre.src-plain-tex:before { content: 'Plain TeX'; }
  pre.src-verilog:before { content: 'Verilog'; }
  pre.src-vhdl:before { content: 'VHDL'; }
  pre.src-xml:before { content: 'XML'; }
  pre.src-nxml:before { content: 'XML'; }
  /* add a generic configuration mode; LaTeX export needs an additional
     (add-to-list 'org-latex-listings-langs '(conf " ")) in .emacs */
  pre.src-conf:before { content: 'Configuration File'; }

  table { border-collapse:collapse; }
  caption.t-above { caption-side: top; }
  caption.t-bottom { caption-side: bottom; }
  td, th { vertical-align:top;  }
  th.org-right  { text-align: center;  }
  th.org-left   { text-align: center;   }
  th.org-center { text-align: center; }
  td.org-right  { text-align: right;  }
  td.org-left   { text-align: left;   }
  td.org-center { text-align: center; }
  dt { font-weight: bold; }
  .footpara { display: inline; }
  .footdef  { margin-bottom: 1em; }
  .figure { padding: 1em; }
  .figure p { text-align: center; }
  .equation-container {
    display: table;
    text-align: center;
    width: 100%;
  }
  .equation {
    vertical-align: middle;
  }
  .equation-label {
    display: table-cell;
    text-align: right;
    vertical-align: middle;
  }
  .inlinetask {
    padding: 10px;
    border: 2px solid gray;
    margin: 10px;
    background: #ffffcc;
  }
  #org-div-home-and-up
   { text-align: right; font-size: 70%; white-space: nowrap; }
  textarea { overflow-x: auto; }
  .linenr { font-size: smaller }
  .code-highlighted { background-color: #ffff00; }
  .org-info-js_info-navigation { border-style: none; }
  #org-info-js_console-label
    { font-size: 10px; font-weight: bold; white-space: nowrap; }
  .org-info-js_search-highlight
    { background-color: #ffff00; color: #000000; font-weight: bold; }
  .org-svg { width: 90%; }
  /*]]>*/-->
</style>
<link href="/styles/org.css" rel="stylesheet" />
<link href="/styles/style.css" rel="stylesheet" />
<link href="https://fonts.googleapis.com/css?family=JetBrains+Mono&?family=Open+Sans" rel="stylesheet" />
<link rel="alternate" type="application/rss+xml" title="Blog RSS Feed" href="/en/blog/rss.xml">
<link rel="icon" type="image/x-icon" href="/images/favicon.ico">
<script type="text/javascript" src="https://payhip.com/payhip.js"></script>
<script type="text/javascript">
/*
@licstart  The following is the entire license notice for the
JavaScript code in this tag.

Copyright (C) 2012-2020 Free Software Foundation, Inc.

The JavaScript code in this tag is free software: you can
redistribute it and/or modify it under the terms of the GNU
General Public License (GNU GPL) as published by the Free Software
Foundation, either version 3 of the License, or (at your option)
any later version.  The code is distributed WITHOUT ANY WARRANTY;
without even the implied warranty of MERCHANTABILITY or FITNESS
FOR A PARTICULAR PURPOSE.  See the GNU GPL for more details.

As additional permission under GNU GPL version 3 section 7, you
may distribute non-source (e.g., minimized or compacted) forms of
that code without the copy of the GNU GPL normally required by
section 4, provided you include this license notice and a URL
through which recipients can access the Corresponding Source.


@licend  The above is the entire license notice
for the JavaScript code in this tag.
*/
<!--/*--><![CDATA[/*><!--*/
 function CodeHighlightOn(elem, id)
 {
   var target = document.getElementById(id);
   if(null != target) {
     elem.cacheClassElem = elem.className;
     elem.cacheClassTarget = target.className;
     target.className = "code-highlighted";
     elem.className   = "code-highlighted";
   }
 }
 function CodeHighlightOff(elem, id)
 {
   var target = document.getElementById(id);
   if(elem.cacheClassElem)
     elem.className = elem.cacheClassElem;
   if(elem.cacheClassTarget)
     target.className = elem.cacheClassTarget;
 }
/*]]>*///-->
</script>
</head>
<body>
<div id="content">
<h1 class="title">Linked List Music
<br />
<span class="subtitle">Richard Davis, Blog</span>
</h1>
<div class="org-center">
<table border="2" cellspacing="0" cellpadding="6" rules="groups" frame="hsides">


<colgroup>
<col  class="org-left" />

<col  class="org-left" />

<col  class="org-left" />

<col  class="org-left" />

<col  class="org-left" />

<col  class="org-left" />
</colgroup>
<tbody>
<tr>
<td class="org-left"><a href="../index.html">Home</a></td>
<td class="org-left"><a href="../about.html">About</a></td>
<td class="org-left"><a href="../events.html">Events</a></td>
<td class="org-left"><a href="../listening.html">Listening</a></td>
<td class="org-left"><a href="index.html">Blog</a></td>
<td class="org-left"><a href="../../fr/index.html">FR</a></td>
</tr>
</tbody>
</table>
</div>

<p>
Salutations!
</p>

<p>
I'm a nerd.
One of the things I'm a nerd about is music; another is computer science.
Only very rarely do the two meet, as they did in a recent piece I wrote.
In this post I'll talk a little bit about a piece I wrote based on the concept of a linked list.
</p>

<div id="outline-container-org07f10fc" class="outline-2">
<h2 id="org07f10fc">Listening</h2>
<div class="outline-text-2" id="text-org07f10fc">
<p>
I got to play this piece myself, which posed a lot of interesting challenges.
Here's a video of the concert; give it a listen and then keep reading!
</p>

<div class="video">  <iframe src="https://www.youtube-nocookie.com/embed/2-0b_wxcztg" allowfullscreen></iframe></div>
</div>
</div>

<div id="outline-container-orgb565294" class="outline-2">
<h2 id="orgb565294">Program Note</h2>
<div class="outline-text-2" id="text-orgb565294">
<p>
The linked list aspect of the piece may be hard to hear at first, especially when you don't know what scale you're listening at.
I'll reproduce the entire program note here, to hopefully shed some light on the concept.
</p>

<blockquote>
<p>
This work takes its name from the poem which is the subject of the seventh and final movement: "ōdī et amō," the eighty-fifth of the <i>Carmina</i> by Classical Latin poet Gaius Valerius Catullus.
The title of this poem translates to "I hate and I love," two emotions which inform the titles and characters of the fourth and fifth movements of the cycle.
These three movements form the center of a cycle of character pieces, which each include topics such as running, dancing, trying, and singing.
</p>

<p>
Structurally, the piece is inspired by a data structure commonly used in computer science, called a linked list, which functions to store lists of objects in a computer's memory.
A linked list is composed of a sequence of nodes that each contain two elements: the item at this position in the list, and a pointer to the next node in the list.
The movements of this piece are like these nodes; each has two parts that correspond to the components of a node of a linked list.
The first, comprising the majority of the duration of the movement, is the "item" at this point in the list, or a passage of music based on a single idea.
The second comes at the end of each piece and represents the "pointer" to the next node in the list; this is a brief, often surprising reference to the content of the following movement.
</p>

<p>
The movements of this piece (or the nodes in this linked list) are roughly sorted in ascending order in terms of lyricality.
Beginning at an instrumental extreme, each successive movement is more lyrical than the last, reaching the limit of how lyrical the viola can be, and finally going beyond it in the last movement.
</p>
</blockquote>

<p>
This is generally how I explain the concept to music people.
It may need one slight addendum for my tech friends: a movement of a multi-movement piece can be thought of roughly like a song on an album, only you generally don't shuffle movements of a piece, you play them all back-to-back in the original order.
</p>
</div>
</div>

<div id="outline-container-org9124aa6" class="outline-2">
<h2 id="org9124aa6">Details</h2>
<div class="outline-text-2" id="text-org9124aa6">
<p>
In order to concretely understand how this piece is structured like a linked list, we must first understand the nature of the "item," or the main idea of each movement.
From there, the "pointers" naturally fall into place.
</p>

<p>
The first movement, titled "currō" ("I run"), is characterized by fast-moving notes exclusively on the A string.
The last note, however, is a two-note chord played on both the A and D strings, which is something of a slight surprise.
This last note is the pointer to the next movement.
</p>

<p>
The second movement, titled "saltō" ("I dance"), therefore features almost entirely by two-note chords.
(This movement refers to dances primarily in terms of rhythm; some listeners may recognize a <a href="https://en.wikipedia.org/wiki/Siciliana">Siciliana</a> pattern.)
These eventually break out into fast runs, which represent the pointer to the next movement.
</p>

<p>
The third movement, humorously titled "cōnor" ("I try") because it is quite hard to play, focuses on these fast runs.
They eventually slow into something more melodic, finally reaching a <i>glissando</i>, or a smooth slide between notes, near the end of the piece.
This <i>glissando</i> is the pointer to the fourth movement.
</p>

<p>
And in turn, the fourth movement, titled "ōdī" ("I hate") is based primarily on <i>glissandi</i>.
This does not, however, account for all of the surprising (and hopefully, shocking and revolting) character of this movement.
I also include some passages that refer to the texture first movement, in order to lend a turbulent and contrasting (but no less hateful) character to the movement.
At the climax, the music reaches and plays around with a new repeated-note figure, which serves as the pointer to the following movement.
</p>

<p>
The fifth movement, titled "amō" ("I love") is constructed almost entirely on this repeated-note figure, save for a contrasting middle section of the most vulnerable sustained notes possible.
The pointer in this movement is the most subtle of them all, in that it melodically resembles the opening of the follow movement.
This change in material is signaled by the first and only two notes in the movement that are neither repeated nor sustained.
</p>

<p>
The sixth movement, titled "canō" ("I sing"), begins with, and is largely based on the melodic idea that ended the previous movement.
The main character of this movement is, as its title suggests, maximally lyrical.
And at the end, when the viola no longer suffices, I sing to make up the difference.
This singing is the most obvious pointer to the next movement.
</p>

<p>
The seventh and final movement, titled "ōdī et amō," ("I hate and I love"), is, needless to say, a little out of place for a solo viola piece: I sing the Catullus poem while playing drones on the viola.
There is no following movement, so this one ends with a "null" pointer, or a pointer to nothing, represented (with a good deal of artistic license) by the passage with the viola alone at the end.
</p>
</div>
</div>

<div id="outline-container-org6fca97a" class="outline-2">
<h2 id="org6fca97a">Conclusion</h2>
<div class="outline-text-2" id="text-org6fca97a">
<p>
I had a lot of fun writing this piece!
I hope you had just as much fun listening to it as I did writing it, and I hope that reading this helped it make some more sense.
If you like, give it another listen and follow along with the notes above!
</p>

<p>
Anecdotally, after I performed this in concert (where I read the program note before I started), after which a computer science student came to tell me that he could hear the structure, especially with the singing pointer.
I enjoyed writing this enough that I think I may soon do more CS-inspired pieces.
I could do something similar for other data structures like trees, or sorting algorithms, etc.
I think it'll be fun!
</p>
</div>
</div>
</div>
<div id="postamble" class="status">
<p class="copyright">© Richard Davis, 2024-04-29 Mon 06:54</p>
</div>
</body>
</html>
